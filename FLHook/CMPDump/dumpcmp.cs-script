using LibreLancer.Utf.Cmp;
using LibreLancer.Utf;

if(Arguments.Length < 1) {
    Console.WriteLine("Usage: lleditscript dumpcmp.cs-script file.cmp/3db [output]");
    Console.WriteLine("If output is not specified, writes to stdout.");
    return;
}

IRigidModelFile file = UtfLoader.LoadDrawable(Arguments[0], null) as IRigidModelFile;
if(file == null)
   return;

TextWriter output;
if(Arguments.Length < 2 || Arguments[1] == "-") {
    output = Console.Out;
} else {
    output = new StreamWriter(Arguments[1]);
}


var rm = file.CreateRigidModel(false);

void WriteModelPart(RigidModelPart part, int indent) 
{
    for(int i = 0; i < indent; i++)
        output.Write("\t");
    output.WriteLine("> " + part.Name);
    if(part.Hardpoints != null) {
        foreach(var hp in part.Hardpoints) {
            for(int i = 0; i < indent + 1; i++) {
                output.Write("\t");
            }
            output.WriteLine(hp.ToString());
        }
    }
    if(part.Children == null)
        return;
    foreach(var child in part.Children) {
        WriteModelPart(child, indent + 1);   
    }
}

WriteModelPart(rm.Root, 0);
